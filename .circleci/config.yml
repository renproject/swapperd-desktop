# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

_defaults: &defaults
    docker:
      - image: circleci/node:8.15
    working_directory: ~/swapperd-desktop

commands:
  rw_checkout:
    description: "Checkout with Read/Write Privileges"
    parameters:
      branch:
        type: string
        default: $CIRCLE_BRANCH
    steps:
      - run:
          name: Setup Git
          command: |
            WORKING_DIR=$(eval echo ${CIRCLE_WORKING_DIRECTORY})
            RW_REPO_URL="https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"

            if [ -e ${WORKING_DIR}/.git ]
            then
              cd ${WORKING_DIR}
              git remote set-url origin "${RW_REPO_URL}" || true
              git fetch --force origin "<< parameters.branch >>:remotes/origin/<< parameters.branch >>"
            else
              mkdir -p ${WORKING_DIR}
              cd ${WORKING_DIR}
              git clone --branch << parameters.branch >> ${RW_REPO_URL} .
            fi
            git fetch --all
  install_deps:
    description: "Install dependencies"
    steps:
      - run:
          name: Install Wine
          command: |-
            sudo dpkg --add-architecture i386
            sudo apt-get update
            sudo apt-get install --no-install-recommends --assume-yes wine wine32
      # Download and cache dependencies
      - restore_cache:
          name: Restore node_modules
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          name: Save node_modules
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  merge:
    description: "Merge from branch into another branch"
    parameters:
      from:
        description: The branch with changes to be merged into another branch
        type: string
      into:
        description: The branch onto which changes will be applied
        type: string
    steps:
      - rw_checkout:
          branch: << parameters.into >>
      - run:
          name: Merging branch
          command: |
            git merge origin/<< parameters.from >> -v
            git push

jobs:
  release:
    <<: *defaults
    steps:
      - checkout
      - install_deps
      - run:
          name: Deploying to Releases
          command: |-
            GH_TOKEN="${GITHUB_TOKEN}" yarn run release
  merge_nightly:
    <<: *defaults
    steps:
      - merge:
          from: master
          into: nightly
  merge_beta:
    <<: *defaults
    steps:
      - merge:
          from: nightly
          into: beta
  merge_stable:
    <<: *defaults
    steps:
      - merge:
          from: beta
          into: stable
  build:
    <<: *defaults
    steps:
      - checkout
      - install_deps
      - run:
          name: Build
          command: yarn run build:all
      - run:
          name: Run tests
          command: yarn test

workflows:
  build:
    jobs:
      - build
      - release:
          requires:
            - build
          filters:
            branches:
              only:
                - stable
  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *" # every night at 02:00
          filters:
            branches:
              only:
                - master
    jobs:
      - merge_nightly
  monthly:
    triggers:
      - schedule:
          cron: "0 0 1 * *" # on the 1st of every month at 00:00
          filters:
            branches:
              only:
                - master
    jobs:
      - merge_stable
      - merge_beta:
          # Only run merge_beta after merge_stable is run
          requires:
            - merge_stable
