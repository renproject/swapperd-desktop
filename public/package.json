{
    "name": "swapperd",
    "description": "Swapperd Native Application for conducting Atomic Swaps.",
    "config": {
        "appName": "Swapperd",
        "outputDir": "../release-builds",
        "winSwapperBin": "https://s3-ap-southeast-2.amazonaws.com/releases.republicprotocol.com/test/swapper_windows_amd64.zip"
    },
    "homepage": ".",
    "version": "1.0.0",
    "dependencies": {
        "axios": "^0.18.0",
        "body-parser": "^1.18.3",
        "express": "^4.16.4",
        "extract-zip": "^1.6.7",
        "menubar": "*",
        "node-notifier": "^5.3.0",
        "request": "2.88.0",
        "shelljs": "^0.8.3",
        "ws": "^6.1.0"
    },
    "devDependencies": {
        "electron": "^3.0.11",
        "electron-installer-dmg": "^2.0.0",
        "electron-packager": "^12.2.0",
        "innosetup-compiler": "^5.5.9",
        "minimalist": "^1.0.0",
        "mustache": "^3.0.1",
        "rimraf": "^2.6.2"
    },
    "main": "main.js",
    "scripts": {
        "start": "npx ./node_modules/electron/cli.js .",
        "build": "npm run build-mac; npm run build-win; npm run build-linux",
        "package-mac": "electron-packager . --overwrite --platform=darwin --arch=x64 --icon=assets/icons/mac/icon.icns --out=${npm_package_config_outputDir}",
        "create-installer-mac": "node installers/mac/createinstaller.js --sourcePath=${npm_package_config_outputDir}/${npm_package_name}-darwin-x64 --icon=assets/icons/mac/icon.icns --clean",
        "build-mac": "npm run package-mac && npm run create-installer-mac",
        "package-win": "electron-packager . --overwrite --platform=win32 --arch=x64 --icon=assets/icons/win/icon.ico --out=${npm_package_config_outputDir} --version-string.CompanyName=CE --version-string.FileDescription=CE --version-string.ProductName=\"${npm_package_name}\"",
        "create-installer-win": "node installers/windows/createinstaller.js --sourcePath=${npm_package_config_outputDir}/${npm_package_name}-win32-x64 --licenseFile ../LICENSE --publisher \"Ren Inc.\" --clean",
        "build-win": "npm run package-win && npm run create-installer-win",
        "package-linux": "electron-packager . ${npm_package_config_appName} --platform=linux --arch=x64 --icon=Icon.icns --out=${npm_package_config_outputDir}",
        "build-linux": "npm run package-linux && npm run create-installer-linux",
        "create-installer-linux": "cd ${npm_package_config_outputDir}/${npm_package_config_appName}-linux-x64/; zip -r ../${npm_package_config_appName}Linux.zip *; cd ..; rm -rf ${npm_package_config_appName}-linux-x64"
    }
}
